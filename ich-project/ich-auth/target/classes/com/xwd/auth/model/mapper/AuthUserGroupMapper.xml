<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="AuthUserGroup">
	
	<resultMap id="authUserGroupResult" type="AuthUserGroup">
        <result property="userId" column="USER_ID"/>
        <result property="groupId" column="GROUP_ID"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
        	USER_ID ,
        	GROUP_ID 
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="userId" parameterType="AuthUserGroup">
    <![CDATA[
        INSERT INTO auth_user_group (
        	USER_ID ,
        	GROUP_ID 
        ) VALUES (
        	#{userId} ,
        	#{groupId} 
        )
    ]]>
	</insert>
    
	<update id="update" parameterType="AuthUserGroup">
    <![CDATA[
        UPDATE auth_user_group SET
        WHERE 
	        USER_ID = #{userId}  AND 
	        GROUP_ID = #{groupId} 
    ]]>
	</update>
	
	<delete id="delete" parameterType="map">
    <![CDATA[
        delete from auth_user_group
    ]]>
		<include refid="dynamicWhere"/>
    </delete>
    
    <delete id="batchDelete" parameterType="list">
        delete from auth_user_group where id in
        <foreach collection="list" item="ids"  open="(" separator="," close=")">   
			#{ids}        
		</foreach> 
    </delete>
    
     <delete id="deleteByUserId" parameterType="list">
        delete from auth_user_group where USER_ID = #{userId}
    </delete>
    
    
    <select id="getById" resultMap="authUserGroupResult">
		SELECT <include refid="commonColumns" />
	    <![CDATA[
		    FROM auth_user_group 
	        WHERE 
		        USER_ID = #{id}  AND 
		        GROUP_ID = #{id} 
	    ]]>
	</select>
	
	<select id="getByIds" resultMap="authUserGroupResult">
		SELECT <include refid="commonColumns" />
		FROM auth_user_group WHERE ID IN
		<foreach collection="list" item="ids"  open="(" separator="," close=")">   
			#{ids}        
		</foreach>  
	</select>
	
	<select id="findByUserId" resultMap="authUserGroupResult">
		SELECT <include refid="commonColumns" />
	    <![CDATA[
		    FROM auth_user_group 
	        WHERE 
		        USER_ID = #{userId}
	    ]]>
	</select>
	
	<sql id="dynamicWhere">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(userId)">
				AND USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(groupId)">
				AND GROUP_ID = #{groupId}
			</if>
		</where>
	</sql>
		
    <select id="count" resultType="long">
        SELECT count(*) FROM auth_user_group 
		<include refid="dynamicWhere"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="authUserGroupResult">
    	SELECT 
    	<if test="@Ognl@isEmpty(count)">
    		<include refid="commonColumns" />
    	</if>
    	<if test="@Ognl@isNotEmpty(count)">
    		count(*) AS ID 
    	</if>
	    FROM auth_user_group 
		<include refid="dynamicWhere"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

